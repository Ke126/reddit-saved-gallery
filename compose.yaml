name: reddit-app

services:

  certbot:
    image: ${COMPOSE_PROJECT_NAME}/certbot
    build: 
      context: ./certbot
      cache_from:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/certbot
      cache_to:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/certbot
      platforms:
        - "linux/arm64/v8"
    environment:
      DOMAIN: ${DOMAIN}
    ports:
      - 80:80
    networks:
      - app-net
    volumes:
      - ./letsencrypt:/etc/letsencrypt:rw # certs
      - /var/run/docker.sock:/var/run/docker.sock:ro # socket

  nginx:
    image: ${COMPOSE_PROJECT_NAME}/nginx
    build: 
      context: ./nginx
      cache_from:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/nginx
      cache_to:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/nginx
      platforms:
        - "linux/arm64/v8"
    networks:
      - app-net
    environment:
      DOMAIN: ${DOMAIN}
    ports:
      - 443:443
    depends_on:
      certbot:
        condition: service_healthy
      frontend:
        condition: service_started
    volumes:
      - ./letsencrypt:/etc/nginx/letsencrypt:ro # certs

  frontend:
    image: ${COMPOSE_PROJECT_NAME}/frontend
    build: 
      context: ./frontend
      cache_from:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/frontend
      cache_to:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/frontend
      platforms:
        - "linux/arm64/v8"
    networks:
      - app-net
    environment:
      OAUTH_CLIENT_ID_FILE: /run/secrets/client_id
      OAUTH_CLIENT_SECRET_FILE: /run/secrets/client_secret
      AES_KEY_FILE: /run/secrets/aes_key
      AES_IV_FILE: /run/secrets/aes_iv
      ORIGIN: https://${DOMAIN}
    secrets:
      - client_id
      - client_secret
      - aes_key
      - aes_iv

  api:
    image: ${COMPOSE_PROJECT_NAME}/api
    build: 
      context: ./api
      cache_from:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/api
      cache_to:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/api
      platforms:
        - "linux/arm64/v8"
    networks:
      - app-net

  query:
    image: ${COMPOSE_PROJECT_NAME}/query
    build: 
      context: ./query
      cache_from:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/query
      cache_to:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/query
      platforms:
        - "linux/arm64/v8"
    networks:
      - app-net
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_password
    secrets:
      - mongo_username
      - mongo_password
    depends_on:
      - mongo

  reddit:
    image: ${COMPOSE_PROJECT_NAME}/reddit
    build: 
      context: ./reddit
      cache_from:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/reddit
      cache_to:
        - type=gha,scope=${COMPOSE_PROJECT_NAME}/reddit
      platforms:
        - "linux/arm64/v8"
    networks:
      - app-net

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_password
    networks:
      - app-net
    secrets:
      - mongo_username
      - mongo_password
    volumes:
      - ./mongo:/data/db:rw

networks:
  app-net:
    name: reddit-application

secrets:
  client_id:
    environment: OAUTH_CLIENT_ID
  client_secret:
    environment: OAUTH_CLIENT_SECRET
  mongo_username: 
    environment: MONGO_INITDB_ROOT_USERNAME
  mongo_password:
    environment: MONGO_INITDB_ROOT_PASSWORD
  aes_key:
    environment: AES_KEY
  aes_iv:
    environment: AES_IV
